"use strict";
/*
 * Copyright 2019-Present Sonatype Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Spinner = void 0;
const ora_1 = __importDefault(require("ora"));
class Spinner {
    constructor(silent = false) {
        this.silent = silent;
        if (!silent) {
            this.spinner = (0, ora_1.default)("Starting application").start();
            this.spinner.succeed();
        }
    }
    maybeCreateMessageForSpinner(message) {
        var _a;
        if (!this.silent) {
            (_a = this.spinner) === null || _a === void 0 ? void 0 : _a.start(message);
        }
    }
    maybeSucceed() {
        var _a;
        if (!this.silent) {
            (_a = this.spinner) === null || _a === void 0 ? void 0 : _a.succeed();
        }
    }
    maybeStop() {
        var _a;
        if (!this.silent) {
            (_a = this.spinner) === null || _a === void 0 ? void 0 : _a.stop();
        }
    }
    maybeFail() {
        var _a;
        if (!this.silent) {
            (_a = this.spinner) === null || _a === void 0 ? void 0 : _a.fail();
        }
    }
}
exports.Spinner = Spinner;
//# sourceMappingURL=Spinner.js.map