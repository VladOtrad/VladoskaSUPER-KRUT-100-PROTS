"use strict";
/*
 * Copyright 2019-Present Sonatype Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IqServerConfig = void 0;
const Config_1 = require("./Config");
const fs_1 = require("fs");
const js_yaml_1 = require("js-yaml");
class IqServerConfig extends Config_1.Config {
    constructor(
    // TODO: Decide if we want to put default values here or leave them blank.. regardless empty strings are not easy to handle
    username = '', token = '', host = '') {
        super('iq', username, token);
        this.username = username;
        this.token = token;
        this.host = host;
        if (this.exists()) {
            this.getConfigFromFile();
        }
    }
    getUsername() {
        return this.username;
    }
    getToken() {
        return this.token;
    }
    getHost() {
        return this.host;
    }
    getConfigFromFile(saveLocation = this.getConfigLocation()) {
        const doc = (0, js_yaml_1.safeLoad)((0, fs_1.readFileSync)(saveLocation, 'utf8'));
        if (doc && doc.Username && doc.Token && doc.Server) {
            super.username = doc.Username;
            super.token = doc.Token;
            this.host = doc.Server;
        }
        return this;
    }
}
exports.IqServerConfig = IqServerConfig;
//# sourceMappingURL=IqServerConfig.js.map